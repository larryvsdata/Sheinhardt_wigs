plot(y)
library(lattice)
xyplot.ts(y)
plot(y)
x=cumsum(rnorm(n=450))
x
?cumsum
plot(nottem)
length(nottem)
decompose(nottem,"additive")
plot(decompose(nottem,type="additive"))
AirPassengers
plot(AirPassengers)
decompose(AirPassengers,"additive")
x=decompose(AirPassengers,"additive")
plot(x)
mymodel=x$trend+x$seasonal
plot(mymodel)
plot(AirPassengers)
plot(x)
plot(mymodel)
seasonplot(AirPassengers,xlab="",col=c("red","blue"),year.labels = T,labelgap = 0.35,type="l",bty="l",cex=0.75,main="Seasonal plot")
install.packages("seasonplot")
seasonplot(AirPassengers,xlab="",col=c("red","blue"),year.labels = T,labelgap = 0.35,type="l",bty="l",cex=0.75,main="Seasonal plot")
library(forecast)
seasonplot(AirPassengers,xlab="",col=c("red","blue"),year.labels = T,labelgap = 0.35,type="l",bty="l",cex=0.75,main="Seasonal plot")
library("TTR")
install.packages("TTR")
library("TTR")
x=c(1:10)
SMA(x,n=3)
lynxsmoothed=SMA(lynx,n=4)
plot(lynx)
plot(lynxsmoothed)
?acf
acyf(lynx)
acf(lynx)
pacf(lynx)
acf(lynx)
pacf(lynx)
acf(lynx)
library(forecast)
auto.arima(lynx)
acf(lynx,lag.max=20)
pacf(lynx,lag.max=20)
acf(lynx,lag.max=20)
pacf(lynx,lag.max=20)
arima(lynx,order=c(2,0,2),include.mean = T)
myArima=arima(lynx,order=c(2,0,2),include.mean = T)
forecast.Arima(myArima,h=3)
install.packages("forecast.Arima")
install.packages("forecast")
forecast.Arima(myArima,h=3)
library(forecast)
myArima=arima(lynx,order=c(2,0,2),include.mean = T)
forecast.Arima(myArima,h=3)
plot.forecast(lynx,order=c(2,0,2),include.mean = T)
plot.forecast(lynx,order=c(2,0,2))
plot.forecast(forecast.Arima(myArima,h=3))
plot(LukeHeron)
plot(LakeHeron)
plot(LakeHuron)
HoltWinters(LakeHuron,gamma=F,beta=F)
HoltWinters(LakeHuron,gamma=F,beta=F)
plot(HoltWinters(LakeHuron,gamma=F,beta=F))
x=HoltWinters(LakeHuron,gamma=F,beta=F)
x=HoltWinters(LakeHuron,gamma=F,beta=F)
library(forecast)
forecast.HoltWinters(x,h=5)
plot.forecast(forecast.HoltWinters(x,h=5))
y=forecast.HoltWinters(x,h=5)
acf(y$residuals)
y=forecast.HoltWinters(x,h=5)
acf(y$residuals)
acf(y$residuals)
y=forecast.HoltWinters(x,h=5)
acf(y$residuals)
y$residuals
acf(y$residuals)
plot.ts(y$residuals)
plot.ts(y$residuals)
Box.ts(y$residuals,lag=20,type="Ljung-Box")
Box.test(y$residuals,lag=20,type="Ljung-Box")
plot(AirPassengers)
HoltWinters(AirPassengers)
plot(AirPassengers)
plot(HoltWinters(AirPassengers))
x=HoltWinters(AirPassengers)
forecast.HoltWinters(x,h=12)
plot(forecast.HoltWinters(x,h=12))
y=forecast.HoltWinters(x,h=12)
acf(y$residuals,lag=20)
y=forecast.HoltWinters(x,h=12)
acf(y$residuals,lag=20)
y$residuals
ts.plot(y$residuals)
acf(y$residuals,lag=20)
plot.ts(y$residuals)
Box.test(y$residuals,lag=20,type="Ljung-Box")
student.height<-c(100,111,108,109,106,114,117)
mean(student.height)
median(student.height)
sort(student.height)
table(student.height)
student.height<-c(100,111,108,109,106,114,117)
mean(student.height)
student.height2<-c(100,111,108,109,106,114,117,NA,133)
mean(student.height2,trim=0.1,na.rm=TRUE)
median(student.height)
table(student.height)
a<-student.height
a<-student.height
sort(a,decreasing=T)
sort(a,decreasing=T)[1]
range(student.height)
quantile(student.height)
IQR(student.height)
sd(student.height)
length(student.height)
a<-c(1,2,3)
is numeric(a)
is.numeric(a)
is.logical(a)
airports<-c("DEL","CAL","LAX","DEL","CAL","DEL","CAL","CAL")
factor(airports)
airport.factor <- factor(airports)
airport.fact <- factor(airports)
summary(airport.fact)
a<-c("a","b","c")
b<-c('Red','Green')
a<-c("a","b","c")
b<-c('Red','Green')
c<-c("Welcome")
my.list<-list(a,b,c)
points(arr_delay[carrier=="AA"],dep_delay[carrier=="AA"],pch=2, col="Red")
install.packages("nycflights13")
library(nycflights13)
nycflights13::flights
attach(nycflights13::flights)
plot(arr_delay,dep_delay)
plot(arr_delay,dep_delay, main="Arrival vs Departure",xlab="Arrival Delay",ylab="Departure Delay",pch="Erman")
abline(0,1.5)
plot(arr_delay,dep_delay, main="Arrival vs Departure",xlab="Arrival Delay",ylab="Departure Delay")
plot(arr_delay,dep_delay, main="Arrival vs Departure",xlab="Arrival Delay",ylab="Departure Delay",cex=0.5)
-------------------------------
plot(arr_delay,dep_delay, main="Arrival vs Departure",xlab="Arrival Delay",ylab="Departure Delay"
,cex=0.5, col=1)
plot(arr_delay,dep_delay, main="Arrival vs Departure",xlab="Arrival Delay",ylab="Departure Delay"
,cex=0.5, col=1)
plot(arr_delay,dep_delay, main="Arrival vs Departure",xlab="Arrival Delay",ylab="Departure Delay"
,cex=0.5, col=4)
plot(arr_delay,dep_delay, main="Arrival vs Departure",xlab="Arrival Delay",ylab="Departure Delay"
,cex=0.5, col=4)
plot(arr_delay,dep_delay, main="Arrival vs Departure",xlab="Arrival Delay",ylab="Departure Delay"
,cex=0.5, col=4,col.main="Red")
text(100,400,"United Airlines", col="green",font=3)
attach(nycflights13::flights)
pairs(~arr_delaydep_delay)
pairs(~arr_delay,dep_delay)
library(nycflights13)
nycflights13::flights
attach(nycflights13::flights)
pairs(~arr_delay,dep_delay)
pairs(~arr_delay+dep_delay)
hist(distance)
hist(distance,breaks=8)
par(mfrow(c(1,2)))
par(mfrow(c(1,2))
par(mfrow(c(1,2)))
par(mfrow(c(1,2)))
mfrow(c(1,2))
par(mfrow=(c(1,2))
par(mfrow=(c(1,2))
par(mfrow=c(1,2))
boxplot(distance~carrier)
par(mfrow=c(1,1))
boxplot(distance~carrier)
install.packages("psych")
library("psych")
nycflights13::flights
attach(nycflights13::flights)
summary(distance)
describe(distance)
r<-runif(1000)
hist(r)
meanr<-mean(r)
sdr<-sd(r)
mean(sample(r,4))
for(i in 1:1000){
cl4<-c(cl4,mean(sample(r,4)))
}
cl4<-mean(sample(r,4))
for(i in 1:1000){
cl4<-c(cl4,mean(sample(r,4)))
}
hist(cl4)
rnorm(10)
rnorm(10,mean=100,sd=1)
pnorm(0.5)
pnorm(0)
pnorm(-1.96)
qnorm(0.05)
dnorm(0)
zvalue<-seq(-4.0,4.0,by=0.1)
plot(zvalue,dnorm(zvalue))
zvalue<-seq(-4.0,4.0,by=0.01)
plot(zvalue,dnorm(zvalue))
plot(zvalue,dnorm(zvalue),type="l")
install.packages("visualize")
library("visualize")
visualize.norm(-2)
visualize.norm(-2,section="tails")
visualize.norm(c(-2,2),section="tails")
rbinom(10,1,0.5)
rbinom(10,10,0.5)
visualize.binom(10,1,0.5)
visualize.binom(10,1,0.5)
visualize.binom(10,4,0.5)
pbinom(5,10,0.5)
qbinom(.5,10,0.5)
dbinom(x=5,size=10,prob=0.5)
n<-c(1:10)
barplot(dbinom(n,10,0.5))
dpois(7,3.6)
library("visualize")
visualize.pois(stat=7,lambda=3.6)
visualize.pois(stat=7,lambda=3.6,section="upper")
library("visualize")
library(readr)
library(readr)
Perfume_Volumes <- read_csv("C:/Users/Erman/Desktop/Udemy/R_statistics/Perfume Volumes.csv")
View(Perfume_Volumes)
mean(Perfume_Volumes$`Machine 1`)
meanOfData<-mean(Perfume_Volumes$`Machine 1`)
myMean<-150
stdDev<-100
zvalue<-(meanOfData-myMean)/(1/sqrt(stdDev))
svalue
zvalue
zvalue<-(meanOfData-myMean)/(2/sqrt(stdDev))
zvalue
visualize.norm(stat=zvalue,section="upper")
install.packages("BSDA")
library(BSDA)
z.test(x=Perfume_Volumes$`Machine 1`,alternative="greater",sigma.x=2,mu =150)
visualize.norm(stat=zvalue,section="upper")
q<- seq(-4.0,4.0,by=0.1)
dt(q,3)
library(readr)
data <- read_csv("C:/Users/Erman/Desktop/data.csv")
View(data)
attach(data)
View(data)
data
data$x
plot(x,y)
plot(data$x,data$y)
corr(data$x,data$y)
cor(data$x,data$y)
plot?
s
help(plot)
cor(data$x,data$y,type="l")
plot(data$x,data$y,type="l")
plot(data$x,data$y,type="h")
help(plot)
plot(data$x,data$y,type="s")
help(plot)
plot(data$x,data$y,type="o")
help(plot)
plot(data$x,data$y,type="p")
help(plot)
plot(data$x,data$y,type="b")
plot(data$x,data$y,type="h")
help(dt)
plot(q,dt(q,19),type="l",lty="solid", xlab="t", ylab="f(t)")
lines(q,dt(q,19),type="l",lty="dashed")
lines(q,dt(q,19),type="l",lty="dashed")
plot(q,dt(q,19),type="l",lty="solid", xlab="t", ylab="f(t)")
lines(q,dt(q,19),type="l",lty="dashed")
plot(q,dt(q,19),type="l",lty="solid", xlab="t", ylab="f(t)")
lines(q,dt(q,19),type="l",lty="dashed")
lines(q,dt(q,9),type="l",lty="dashed")
vol<-c(151,152,153,154)
t.test(x=vol,mu=150,conf.level=.95)
q,
library(visualize)
library(visualize)
visualize.t(stat=c(-4.89,4.89),df=3,section="tails")
install.packages("EnvStats")
library(EnvStats)
library(readr)
VolumeVar <- read_csv("C:/Users/Erman/Desktop/Udemy/R_statistics/VolumeVar.csv")
View(VolumeVar)
varTest(x=VolumeVar$`ÿVolumes`,sigma.squared = 4,alternative="greater")
varTest(x=VolumeVar$Volumes,sigma.squared = 4,alternative="greater")
VolumeVar$Volumes
VolumeVar$`ÿVolumes`
attach(VolumeVar)
varTest(x=Volumes,sigma.squared = 4,alternative="greater")
Volumes
VolumeVar$`ÿVolumes`
VolumeVar$`Volumes`
VolumeVar$Volumes
library("BSDA")
library(BSDA)
library(readr)
library(readr)
perfume2 <- read_csv("C:/Users/Erman/Desktop/Udemy/R_statistics/Perfume Volumes 2 Sample.csv")
View(perfume2)
perfume2$`Machine 2`
z.test(x=perfume2$`Machine 1`,y=perfume2$`Machine 2`)
z.test(x=perfume2$`ÿMachine 1`,y=perfume2$`Machine 2`)
perfume2$`ÿMachine 1`
perfume2.names
rename(perfume2,c('M1','M2'))
names(perfume2)<-c('M1','M2')
perfume2$M1
z.test(x=perfume2$M1,y=perfume2$M2)
z.test(x=perfume2$M1,y=perfume2$M2,sigma.x = sd(M1),sigma.y = sd(M2))
z.test(x=perfume2$M1,y=perfume2$M2,sigma.x = sd(perfume2$M1),sigma.y = sd(perfume2$M2))
boxplot(x=perfume2)
hist(perfume2$M1)
hist(perfume2$M1,col="blue")
hist(perfume2$M2,col="red")
hist(perfume2$M1,col="blue")
hist(perfume2$M2,col="red",add=T)
z.test(x=perfume2$M1,y=perfume2$M2,sigma.x = sd(perfume2$M1),sigma.y = sd(perfume2$M2),mu=-1)
var.test(x=mc1,y=mc2)
mc1<-c(150,152,154,151,152)
mc2<-c(156,152,154,151,152)
var.test(x=mc1,y=mc2)
mc1<-c(150,152,154,151,152)
mc2<-c(153,152,154,151,152)
var.test(x=mc1,y=mc2)
t.test(x=mc1,y=mc2,var.equal=T)
bp.before <-c(120,122,143,100,109)
bp.after <-c(122,120,141,109,109)
t.test(x=bp.before,y=bp.after,paired=T)
mca<-c(150,150,151,149,151,151,148,151)
sd(mca)
mean(mca)
mcb<-c(152,146,142,150,152)
sd(mcb)
mean(mcb)
var.test(x=mca,y=mcb,ratio=1, conf.level = 0.9)
Fcrit <- qf(p=0.05,df1=4,df2=7)
x<-seq(0,10)
df(x,df1=4,df2=7)
plot(df(x,df1=4,df2=7))
plot(df(x,df1=4,df2=7),type="l")
plot(df(x,df1=4,df2=7),type="l",xlim=(0,15))
plot(df(x,df1=4,df2=7),type="l",xlim=c(0,15))
plot(df(x,df1=4,df2=7),type="l",xlab="F value",xlim=c(0,15))
x<-seq(0,10,0.01)
df(x,df1=4,df2=7)
plot(df(x,df1=4,df2=7),type="l",xlab="F value",xlim=c(0,15))
x<-seq(0,10,0.1)
df(x,df1=4,df2=7)
plot(df(x,df1=4,df2=7),type="l",xlab="F value",xlim=c(0,15))
x<-seq(0,10)
df(x,df1=4,df2=7)
plot(df(x,df1=4,df2=7),type="l",xlab="F value",xlim=c(0,15))
seq(1,2,0.1)
x<-seq(0,10,0.1)
df(x,df1=4,df2=7)
plot(df(x,df1=4,df2=7),type="l",xlab="F value",xlim=c(0,15))
volume<-c(mc1,mc2,mc3)
volume<-c(mc1,mc2,mc3)
machine<-rep("machine1",times=6)
vol.mc<-data.frame(volume,machine)
mc1 <-c(150,151,152,152,151,150)
mc2 <-c(152,153,148,151,149,152)
mc3 <-c(156,154,155,156,157,155)
volume<-c(mc1,mc2,mc3)
machine<-rep("machine1",times=6)
vol.mc<-data.frame(volume,machine)
machine<-rep("machine1","machine2","machine3",times=c(length(mc1),length(mc2),length(mc3)))
machine<-rep(c("machine1","machine2","machine3"),times=c(length(mc1),length(mc2),length(mc3)))
vol.mc<-data.frame(volume,machine)
vol.mc
mc.aov<-aov(data=vol.mc,formula=volume~machine)
summary(mc.aov)
vol.mc
TUKEYHSD(x=mc.aov)
TukeyHSD(x=mc.aov)
chisq.test(x=flip,p=c(0.5,0.5))
flip<-c(40,60)
chisq.test(x=flip,p=c(0.5,0.5))
Opr<-data.frame(Op1,Op2,Op3,row.names=c('shift1','shift2','shift3'))
chisq.test(Opr)
Op1<-c(22,28,72)
Op2<-c(26,62,22)
Op3<-c(23,26,66)
Opr<-data.frame(Op1,Op2,Op3,row.names=c('shift1','shift2','shift3'))
chisq.test(Opr)
Opr
qchinsq(0.05,df=4,lower.tail=F)
qchisq(0.05,df=4,lower.tail=F)
install.packages("gmodels")
library(gmodels)
help(meanm)
url <- "https://raw.githubusercontent.com/steviep42/youtube/master/YOUTUBE.DIR/wines.csv"
getwd()
setwd("C:/Users/Erman/Desktop/Sheinhardt_wigs")
df <- read.csv("myRandomFile.csv", header=TRUE)
df <- read.csv("formattedData.csv", header=TRUE)
View(df)
df.pca<-princomp(df,scores=True,cor=True)
df.pca<-princomp(df,scores=T,cor=T)
screeplot(df.pca,main="Scree Plot",xlab="Componenets")
screeplot(df.pca,main="Scree Plot",xlab="Componets")
library(gclus)
my.abs     <- abs(cor(df[,-1]))
my.colors  <- dmat.color(my.abs)
my.ordered <- order.single(cor(df[,-1]))
cpairs(df, my.ordered, panel.colors=my.colors, gap=0.5)
library(gclus)
install.packages("gclus")
library(gclus)
my.abs     <- abs(cor(df[,-1]))
my.colors  <- dmat.color(my.abs)
my.ordered <- order.single(cor(df[,-1]))
cpairs(df, my.ordered, panel.colors=my.colors, gap=0.5)
df.pca<-princomp(df,scores=T,cor=T)
screeplot(df.pca,main="Scree Plot",xlab="Componets")
summary(df.pca)
plot(df.pca)
biplot(df.pca)
df.pca$loadings
df <- read.csv("CrimeRate.csv", header=TRUE)
View(df)
CrimeRate <- read.csv("CrimeRate.csv", header=TRUE)
library(gclus)
my.abs     <- abs(cor(CrimeRate[,-1]))
my.colors  <- dmat.color(my.abs)
my.ordered <- order.single(cor(CrimeRate[,-1]))
cpairs(CrimeRate, my.ordered, panel.colors=my.colors, gap=0.5)
CrimeRate.pca<-princomp(CrimeRate,scores=T,cor=T)
screeplot(CrimeRate.pca,main="Scree Plot",xlab="Componets")
summary(CrimeRate.pca)
plot(CrimeRate.pca)
plot(CrimeRate.pca,main="Scree Plot",xlab="Componets")
biplot(CrimeRate.pca)
CrimeRate.pca$loadings
summary(CrimeRate.pca)
CrimeRate.pca$loadings
View(CrimeRate)
CrimeRate <- read.csv("CrimeRate.csv", header=TRUE)
library(gclus)
my.abs     <- abs(cor(CrimeRate[,-1]))
my.colors  <- dmat.color(my.abs)
my.ordered <- order.single(cor(CrimeRate[,-1]))
cpairs(CrimeRate, my.ordered, panel.colors=my.colors, gap=0.5)
CrimeRate.pca<-princomp(CrimeRate,scores=T,cor=T)
screeplot(CrimeRate.pca,main="Scree Plot",xlab="Componets")
summary(CrimeRate.pca)
plot(CrimeRate.pca,main="Scree Plot",xlab="Componets")
plot(CrimeRate.pca,main="Scree Plot",xlab="Componets")
biplot(CrimeRate.pca)
CrimeRate.pca$loadings
CrimeRate.pca$loadings
CrimeRate <- read.csv("CrimeRate.csv", header=TRUE)
library(gclus)
my.abs     <- abs(cor(CrimeRate[,-1]))
my.colors  <- dmat.color(my.abs)
my.ordered <- order.single(cor(CrimeRate[,-1]))
cpairs(CrimeRate, my.ordered, panel.colors=my.colors, gap=0.5)
CrimeRate.pca<-princomp(CrimeRate,scores=T,cor=T)
screeplot(CrimeRate.pca,main="Scree Plot",xlab="Componets")
summary(CrimeRate.pca)
biplot(CrimeRate.pca)
CrimeRate.pca$loadings
CrimeRate.fa<-factanal(CrimeRate,factors=2)
CrimeRate.fa
VCR <- read.csv("VCR.csv", header=TRUE)
View(VCR)
library(gclus)
my.abs     <- abs(cor(VCR[,-1]))
my.colors  <- dmat.color(my.abs)
my.ordered <- order.single(cor(VCR[,-1]))
cpairs(VCR, my.ordered, panel.colors=my.colors, gap=0.5)
VCR.pca<-princomp(VCR,scores=T,cor=T)
screeplot(VCR.pca,main="Scree Plot",xlab="Componets")
summary(VCR.pca)
plot(VCR.pca,main="Scree Plot",xlab="Componets")
biplot(VCR.pca)
VCR.pca$loadings
library(gclus)
my.abs     <- abs(cor(VCR[,-1]))
my.colors  <- dmat.color(my.abs)
my.ordered <- order.single(cor(VCR[,-1]))
cpairs(VCR, my.ordered, panel.colors=my.colors, gap=0.5)
VCR.pca<-princomp(VCR,scores=T,cor=T)
screeplot(VCR.pca,main="Scree Plot",xlab="Componets")
summary(VCR.pca)
biplot(VCR.pca)
VCR.pca$loadings
# Crime Rate
#Principal Component Analysis
CrimeRate <- read.csv("CrimeRate.csv", header=TRUE)
library(gclus)
my.abs     <- abs(cor(CrimeRate[,-1]))
my.colors  <- dmat.color(my.abs)
my.ordered <- order.single(cor(CrimeRate[,-1]))
cpairs(CrimeRate, my.ordered, panel.colors=my.colors, gap=0.5)
CrimeRate.pca<-princomp(CrimeRate,scores=T,cor=T)
screeplot(CrimeRate.pca,main="Scree Plot",xlab="Componets")
summary(CrimeRate.pca)
plot(CrimeRate.pca,main="Scree Plot",xlab="Componets")
biplot(CrimeRate.pca)
CrimeRate.pca$loadings
